{"message":"unused import: `std::ops::Range`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":100,"byte_end":115,"line_start":4,"line_end":4,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"use std::ops::Range;","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":96,"byte_end":116,"line_start":4,"line_end":4,"column_start":1,"column_end":21,"is_primary":true,"text":[{"text":"use std::ops::Range;","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::ops::Range`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::ops::Range;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused imports: `GameStateBullying`, `Player`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7912,"byte_end":7929,"line_start":261,"line_end":261,"column_start":34,"column_end":51,"is_primary":true,"text":[{"text":"    use crate::data_structures::{GameStateBullying, Player};","highlight_start":34,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7931,"byte_end":7937,"line_start":261,"line_end":261,"column_start":53,"column_end":59,"is_primary":true,"text":[{"text":"    use crate::data_structures::{GameStateBullying, Player};","highlight_start":53,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7883,"byte_end":7939,"line_start":261,"line_end":261,"column_start":5,"column_end":61,"is_primary":true,"text":[{"text":"    use crate::data_structures::{GameStateBullying, Player};","highlight_start":5,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `GameStateBullying`, `Player`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:261:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use crate::data_structures::{GameStateBullying, Player};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":5353,"byte_end":5625,"line_start":188,"line_end":197,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        GameStateBullying {","highlight_start":9,"highlight_end":28},{"text":"            players,","highlight_start":1,"highlight_end":21},{"text":"            games_won_of_players,","highlight_start":1,"highlight_end":34},{"text":"            cards_in_stock,","highlight_start":1,"highlight_end":28},{"text":"            cards_played: Vec::new(),","highlight_start":1,"highlight_end":38},{"text":"            cards_of_players,","highlight_start":1,"highlight_end":30},{"text":"            available_moves_of_players,","highlight_start":1,"highlight_end":40},{"text":"            current_turn,","highlight_start":1,"highlight_end":26},{"text":"            draw_stack: 0","highlight_start":1,"highlight_end":26},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"<::std::macros::panic macros>","byte_start":213,"byte_end":300,"line_start":5,"line_end":6,"column_start":6,"column_end":55,"is_primary":false,"text":[{"text":"     $ crate :: rt :: begin_panic_fmt","highlight_start":6,"highlight_end":38},{"text":"     (& $ crate :: format_args ! ($ fmt, $ ($ arg) +))","highlight_start":1,"highlight_end":55}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"<::core::macros::todo macros>","byte_start":65,"byte_end":140,"line_start":2,"line_end":2,"column_start":2,"column_end":77,"is_primary":false,"text":[{"text":"(panic ! (\"not yet implemented: {}\", $ crate :: format_args ! ($ ($ arg) +)))","highlight_start":2,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":5320,"byte_end":5343,"line_start":186,"line_end":186,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        todo!(\"Fix this shit\");","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"<::core::macros::todo macros>","byte_start":0,"byte_end":143,"line_start":1,"line_end":3,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"() => (panic ! (\"not yet implemented\")) ; ($ ($ arg : tt) +) =>","highlight_start":1,"highlight_end":64},{"text":"(panic ! (\"not yet implemented: {}\", $ crate :: format_args ! ($ ($ arg) +)))","highlight_start":1,"highlight_end":78},{"text":";","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"panic!","def_site_span":{"file_name":"<::std::macros::panic macros>","byte_start":0,"byte_end":306,"line_start":1,"line_end":7,"column_start":1,"column_end":6,"is_primary":false,"text":[{"text":"() => ({ $ crate :: panic ! (\"explicit panic\") }) ; ($ msg : expr) =>","highlight_start":1,"highlight_end":70},{"text":"({ $ crate :: rt :: begin_panic ($ msg) }) ; ($ msg : expr,) =>","highlight_start":1,"highlight_end":64},{"text":"({ $ crate :: panic ! ($ msg) }) ; ($ fmt : expr, $ ($ arg : tt) +) =>","highlight_start":1,"highlight_end":71},{"text":"({","highlight_start":1,"highlight_end":3},{"text":"     $ crate :: rt :: begin_panic_fmt","highlight_start":1,"highlight_end":38},{"text":"     (& $ crate :: format_args ! ($ fmt, $ ($ arg) +))","highlight_start":1,"highlight_end":55},{"text":" }) ;","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:188:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        todo!(\"Fix this shit\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        GameStateBullying {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            players,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m190\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            games_won_of_players,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            cards_in_stock,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m196\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            draw_stack: 0\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m197\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33munreachable expression\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `c`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7751,"byte_end":7752,"line_start":250,"line_end":250,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"                BullyingAction::PlayCard(c) => {","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider prefixing with an underscore","code":null,"level":"help","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7751,"byte_end":7752,"line_start":250,"line_end":250,"column_start":42,"column_end":43,"is_primary":true,"text":[{"text":"                BullyingAction::PlayCard(c) => {","highlight_start":42,"highlight_end":43}],"label":null,"suggested_replacement":"_c","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `c`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:250:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                BullyingAction::PlayCard(c) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider prefixing with an underscore: `_c`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"cannot borrow `*self` as mutable because it is also borrowed as immutable","code":{"code":"E0502","explanation":"This error indicates that you are trying to borrow a variable as mutable when it\nhas already been borrowed as immutable.\n\nErroneous code example:\n\n```compile_fail,E0502\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    let ref y = a; // a is borrowed as immutable.\n    bar(a); // error: cannot borrow `*a` as mutable because `a` is also borrowed\n            //        as immutable\n    println!(\"{}\", y);\n}\n```\n\nTo fix this error, ensure that you don't have any other references to the\nvariable before trying to access it mutably:\n\n```\nfn bar(x: &mut i32) {}\nfn foo(a: &mut i32) {\n    bar(a);\n    let ref y = a; // ok!\n    println!(\"{}\", y);\n}\n```\n\nFor more information on the rust ownership system, take a look at\nhttps://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html.\n"},"level":"error","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7614,"byte_end":7630,"line_start":247,"line_end":247,"column_start":29,"column_end":45,"is_primary":true,"text":[{"text":"                    let c = self.draw_card();","highlight_start":29,"highlight_end":45}],"label":"mutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7255,"byte_end":7267,"line_start":239,"line_end":239,"column_start":27,"column_end":39,"is_primary":false,"text":[{"text":"            let player = &self.players[index];","highlight_start":27,"highlight_end":39}],"label":"immutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7674,"byte_end":7680,"line_start":248,"line_end":248,"column_start":43,"column_end":49,"is_primary":false,"text":[{"text":"                    self.cards_of_players[player].push(c);","highlight_start":43,"highlight_end":49}],"label":"immutable borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0502]\u001b[0m\u001b[0m\u001b[1m: cannot borrow `*self` as mutable because it is also borrowed as immutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:247:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m239\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            let player = &self.players[index];\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mimmutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m247\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let c = self.draw_card();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    self.cards_of_players[player].push(c);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mimmutable borrow later used here\u001b[0m\n\n"}
{"message":"cannot borrow data in an index of `std::collections::HashMap<data_structures::Player, std::vec::Vec<data_structures::Card>>` as mutable","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs","byte_start":7652,"byte_end":7681,"line_start":248,"line_end":248,"column_start":21,"column_end":50,"is_primary":true,"text":[{"text":"                    self.cards_of_players[player].push(c);","highlight_start":21,"highlight_end":50}],"label":"cannot borrow as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::collections::HashMap<data_structures::Player, std::vec::Vec<data_structures::Card>>`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m: cannot borrow data in an index of `std::collections::HashMap<data_structures::Player, std::vec::Vec<data_structures::Card>>` as mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/nils/git/just_another_card_game/shared_lib/src/data_structures.rs:248:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m248\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    self.cards_of_players[player].push(c);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot borrow as mutable\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: trait `IndexMut` is required to modify indexed content, but it is not implemented for `std::collections::HashMap<data_structures::Player, std::vec::Vec<data_structures::Card>>`\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0502, E0596.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0502, E0596.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0502`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0502`.\u001b[0m\n"}
